var PhpRadius = {};
var myData = {};
var Table = undefined;

/*Total TAX And Show Hide GST TAX*/
function set_add_tax() {
	PhpRadius.add_tax = 0;
	if (PhpRadius.tax_name == "GST") {
		if (PhpRadius.isp_gst.substring(0, 2) == PhpRadius.cust_gst.substring(0, 2) || PhpRadius.cust_gst == "") {
			$('.sgst').show();
			$('.igst').hide();
			PhpRadius.add_tax = PhpRadius.tax2 + PhpRadius.tax3;
		} else {
			$('.igst').show();
			$('.sgst').hide();
			PhpRadius.add_tax = PhpRadius.tax1;
		}
	} else if (PhpRadius.tax_name = "Service") {
		PhpRadius.add_tax = PhpRadius.tax1 + PhpRadius.tax2 + PhpRadius.tax3;
		$('.igst').show();
		$('.sgst').show();
	}
}

/*Notification*/
NotifyMsg = function NotifyMsg(msg) {
	var msg = msg.split("@");
	$('.modal').modal('hide');
	//$.notify(msg[0],msg[1]);
	$.notify({
		icon: '',
		message: msg[0]
	}, {
		type: msg[1],
		placement: {
			from: 'top',
			align: 'right'
		}
	});
}
/*Notification end*/
/*** Ajax Call ***/
function ajax_call(url, myData, callback) {
	ShowSpin();
	$.ajax({
		url: url,
		type: "POST",
		data: myData,
		success: function (output) {
			HideSpin();
			if (callback && typeof (callback) === "function") {
				callback(output);
				//ajax_success(output);
				return;
			}
		}
	})
}
/*** Ajax Call ***/

/*** spiner ***/
function HideSpin() {
	$('body #spin').hide();
}

function ShowSpin() {
	$('body #spin').show();
}
/*** spiner ***/

/*** new invoice payment function ***/
function payment_show() {
	var totbill = document.getElementById("totalbilled").value;
	$('.payment').show();
	$('#pay_bill').val(totbill);
}

function payment_hide() {
	$('.payment').hide();
	$('#pay_bill').val("0.00");
}
/*** new invoice payment function ***/
/*** new/edit invoice function ***/
function change_desclbl(lbl_text) {
	jQuery("label[for='notes']").html(lbl_text);
}
/*** new/edit invoice function END***/

/*tab show pas tab id*/
function tab_show(tabname) {
	$('.nav-tabs a[href="#' + tabname + '"]').tab('show');
}
/*tab show pas tab id END */

isWindows = -1 < navigator.platform.indexOf("Win"),
	isWindows ? ($(".sidebar .sidebar-wrapper, .main-panel").perfectScrollbar(),
		$("html").addClass("perfect-scrollbar-on")) : $("html").addClass("perfect-scrollbar-off");

/*Total TAX And Show Hide GST TAX END*/
$(document).ready(function () {
	var ServerScript = "serverscript/";
	var initprocess = 0;
	var reltime = 0;
	var CardColor = "info";
	var InvoiceUrl = '<?php echo $url; ?>';
	PhpRadius.tbltimeout;
	PhpRadius.timeout = false;
	xhrPool = [];
	if (PhpRadius.BtnUrl == undefined) {
		PhpRadius.BtnUrl = '';
	}

	function GetUrl() {
		var loc = window.location.href;
		return loc.split('/').pop().split('.').shift()
	};

	function Select2Nas() {
		$('.selectnas').select2({
			theme: 'bootstrap',
			width: 'resolve',
			placeholder: 'Select Nas'
		});
	}
	var Url = GetUrl();
	var TablesList = {
		"router-lease": {
			Title: "DHCP Lease",
			Description: "Online User List",
			destroy: true,
			Class: "",
			order: [
				[1, "asc"]
			],
			Reload: 5000,
			Columns: ['Host Name', 'IP', 'Mac Address', 'Expire After', 'Last Seen', 'Server', 'Action'],
			"columnDefs": [{
				"className": "td-actions",
				"targets": 6,
				"data": null,
				"defaultContent": "<button class='btn btn-primary btn-round' data-toggle='modal' title='Mac Vendor'  id='macModal1' data-tooltip='true' data-target='#macModal'><i class='material-icons'>build</i></button>"
			}, {
				"render": function (data, type, row) {
					var btn = "<a href='http://" + row[1] + "' target='_blank'>" + row[1] + "</a>";
					return btn;
				},
				"targets": 1,
			}],
			RowAll: true,
		},
		"list-mk-dhcp": {
			Title: "DHCP Server",
			Description: "Mikrotik DHCP Server List",
			Class: "",
			HeaderBtn: "<a class='btn btn-" + CardColor + " pull-right' href='mk-dhcp.php'><i class='material-icons'>add_circle_outline</i> Add DHCP</a>",
			Columns: ['Name', 'Interface', 'Lease Time', 'Address-Pool', 'Status', 'Action'],
			AjaxFile: "router_server_dhcplist.php",
			"columnDefs": [{
				"className": "td-actions",
				"render": function (data, type, row) {
					var btn = "<a  class='btn btn-primary btn-round' href='mk-dhcp.php?mkid=" + row[5] + "&mkip=" + PhpRadius.routerip + "' data-toggle='tooltip' title='Edit DHCP' > <i class='material-icons'>edit</i> </a> <button class='btn btn-danger btn-round PhpData' data-key='mk-dhcp.php?remove=" + row[5] + "&mkip=" + PhpRadius.routerip + "' data-msg='Are you sure? Delete This DHCP=" + row[0] + "'  data-title='Delete' data-btntxt='Delete' data-btncls='btn-danger' id='r_if_remove' data-tooltip='true'><i class='material-icons'>delete</i></button>";
					return btn;
				},
				"targets": 5,
			}],
			RowAll: true,
		},
		"list-mk-ippool": {
			Title: "IP Pool",
			Description: "Mikrotik IP Pool List",
			Class: "",
			HeaderBtn: "<a class='btn btn-" + CardColor + " pull-right' href='mk-ippool.php'><i class='material-icons'>add_circle_outline</i> Add IP Pool</a>",
			Columns: ['Name', 'IP Range', 'Action'],
			AjaxFile: "router_server_ippoollist.php",
			"columnDefs": [{
				"className": "td-actions",
				"render": function (data, type, row) {
					var btn = "<a  class='btn btn-primary btn-round' href='mk-ippool.php?mkid=" + row[2] + "&mkip=" + PhpRadius.routerip + "' data-toggle='tooltip' title='Edit DHCP' > <i class='material-icons'>edit</i> </a> <button class='btn btn-danger  btn-round PhpData' data-key='mk-ippool.php?remove=" + row[2] + "&mkip=" + PhpRadius.routerip + "' data-msg='Are you sure? Delete This DHCP=" + row[0] + "'  data-title='Delete' data-btntxt='Delete' data-btncls='btn-danger' id='r_if_remove' data-tooltip='true'><i class='material-icons'>delete</i></button>";
					return btn;
				},
				"targets": 2,
			}],
			RowAll: true,
		},
		"list-mk-hotspot": {
			Title: "Hotspot Server",
			Description: "Mikrotik Hotspot Server List",
			Class: "",
			HeaderBtn: "<a class='btn btn-" + CardColor + " pull-right' href='mk-hotspot.php'><i class='material-icons'>add_circle_outline</i> Add Hotspot</a><a class='btn btn-" + CardColor + " pull-right' href='list-mk-hsprofile.php'>Hotspot Profile</a>",
			Columns: ['Name', 'Interface', 'Address Pool', 'Status', 'Action'],
			AjaxFile: "router_server_hotspotlist.php",
			"columnDefs": [{
				"className": "td-actions",
				"render": function (data, type, row) {
					var btn = "<a  class='btn btn-primary  btn-round' href='mk-hotspot.php?mkid=" + row[4] + "&mkip=" + PhpRadius.routerip + "' data-toggle='tooltip' title='Edit DHCP' > <i class='material-icons'>edit</i> </a> <button class='btn btn-danger  btn-round PhpData' data-key='mk-hotspot.php?remove=" + row[4] + "&mkip=" + PhpRadius.routerip + "' data-msg='Are you sure? Delete This DHCP=" + row[0] + "'  data-title='Delete' data-btntxt='Delete' data-btncls='btn-danger' id='r_if_remove' data-tooltip='true'><i class='material-icons'>delete</i></button>";
					return btn;
				},
				"targets": 4,
			}],
			RowAll: true,
		},
		"list-mk-hsprofile": {
			Title: "Hotspot Profile",
			Description: "Mikrotik Hotspot Profile List",
			Class: "",
			HeaderBtn: "<a class='btn btn-" + CardColor + " pull-right' href='mk-hotspot.php'><i class='material-icons'>add_circle_outline</i> Add Hotspot</a><a class='btn btn-" + CardColor + " pull-right' href='list-mk-hotspot.php'>Hotspot Server</a>",
			Columns: ['Name', 'Interface', 'Address Pool', 'Status', 'Action'],
			AjaxFile: "router_server_hotspotlist.php",
			"columnDefs": [{
				"className": "td-actions",
				"render": function (data, type, row) {
					var btn = "<a  class='btn btn-primary  btn-round' href='mk-hotspot.php?mkid=" + row[4] + "&mkip=" + PhpRadius.routerip + "' data-toggle='tooltip' title='Edit DHCP' > <i class='material-icons'>edit</i> </a> <button class='btn btn-danger  btn-round PhpData' data-key='mk-hotspot.php?remove=" + row[4] + "&mkip=" + PhpRadius.routerip + "' data-msg='Are you sure? Delete This DHCP=" + row[0] + "'  data-title='Delete' data-btntxt='Delete' data-btncls='btn-danger' id='r_if_remove' data-tooltip='true'><i class='material-icons'>delete</i></button>";
					return btn;
				},
				"targets": 4,
			}],
			RowAll: true,
		},
		"list-mk-pppoe": {
			Title: "PPPoE Server",
			Description: "Mikrotik PPPoE Server List",
			Class: "",
			HeaderBtn: "<a class='btn btn-" + CardColor + " pull-right' href='mk-pppoe.php'><i class='material-icons'>add_circle_outline</i> Add PPPoE</a>",
			Columns: ['Name', 'Interface', 'Profile', 'Status', 'Action'],
			AjaxFile: "router_server_ppplist.php",
			"columnDefs": [{
				"className": "td-actions",
				"render": function (data, type, row) {
					var btn = "<a  class='btn btn-primary  btn-round	' href='mk-pppoe.php?mkid=" + row[4] + "&mkip=" + PhpRadius.routerip + "' data-toggle='tooltip' title='Edit DHCP' > <i class='material-icons'>edit</i> </a> <button class='btn btn-danger  btn-round PhpData' data-key='mk-pppoe.php?remove=" + row[4] + "&mkip=" + PhpRadius.routerip + "' data-msg='Are you sure? Delete This DHCP=" + row[0] + "'  data-title='Delete' data-btntxt='Delete' data-btncls='btn-danger' id='r_if_remove' data-tooltip='true'><i class='material-icons'>delete</i></button>";
					return btn;
				},
				"targets": 4,
			}],
			RowAll: true,
		},
		"list-mk-masquerade": {
			Title: "Masquerade",
			Description: "Mikrotik Masquerade IP List",
			Class: "",
			HeaderBtn: "<a class='btn btn-" + CardColor + " pull-right' href='masquerade.php'><i class='material-icons'>add_circle_outline</i> Add masquerade</a>",
			Columns: ['Name', 'IP', 'Action'],
			AjaxFile: "router_server_masqueradelist.php",
			"columnDefs": [{
				"className": "td-actions",
				"render": function (data, type, row) {
					var btn = "<a  class='btn btn-primary btn-round' href='masquerade.php?mkid=" + row[2] + "&mkip=" + PhpRadius.routerip + "' data-toggle='tooltip' title='Edit DHCP' > <i class='material-icons'>edit</i> </a> <button class='btn btn-danger btn-round PhpData' data-key='masquerade.php?remove=" + row[2] + "&mkip=" + PhpRadius.routerip + "' data-msg='Are you sure? Delete This Masquerade=" + row[0] + "'  data-title='Delete' data-btntxt='Delete' data-btncls='btn-danger' id='r_if_remove' data-tooltip='true'><i class='material-icons'>delete</i></button>";
					return btn;
				},
				"targets": 2,
			}],
			RowAll: true,
		},
		"router-live": {
			Title: "Online Users",
			Description: "Online User List",
			destroy: true,
			Class: "",
			Reload: 5000,
			HeaderBtn: PhpRadius.BtnUrl,
			Columns: ['User', 'IP', 'Uptime', 'RX Bytes', 'RX Speed', 'TX Bytes', 'TX Speed', 'Logout'],
			ColumnVis: true,
			RowAll: true,
			columnDefs: [{
				"render": function (data, type, row) {
					return '<button class="btn btn-success btn-round PhpData" value="Logout" data-key="include/management/radOperation.php?username=' + row[7] + '&disconnect=mknas" data-msg="You are about to log out user ' + row[0] + '" data-title="Logout User" data-btntxt="Logout user" data-btncls="btn-success">Logout</button>';
				},
				"targets": 7
			}, {
				"render": function (data, type, row) {
					return '<a href="edit-user.php?username=' + row[7] + '">' + row[0] + '</a>';
				},
				"targets": 0
			}],
		},
		"list-user": {
			Title: "List Users",
			Description: "Display All Users",
			Class: "",
			stateSave: true,
			ServerSide: false,
			Export: true,
			HeaderBtn: "<a class='btn btn-info pull-right' href='new-user.php'><i class='material-icons'>add_circle_outline</i> Create User</a>",
			Columns: ['User Name', 'Contact Person', 'Address', 'City', 'Phone', 'Plan Name', 'expiry date', 'Payment Status', 'User Type'],
			AjaxFile: "s_list-user.php",
			ColumnVis: true,
			columnDefs: [{
					targets: [2, 3, 8],
					visible: false
				},
				{
					"targets": 6,
					render: $.fn.dataTable.render.moment()
				},
				{
					"render": function (data, type, row) {
						var temp = (row[8] != null) ? row[8] : row[0];
						var btn = "<a href='edit-user.php?username=" + row[0] + "'>" + temp + "</a>";
						return btn;
					},
					"targets": 0,
				}, {
					"render": function (data, type, row) {
						if (row[9] == "1") {
							return "Admin";
						} else if (row[9] == "2") {
							return "Operator";
						} else if (row[9] == "3") {
							return "Franchise";
						} else {
							return "--";
						}
					},
					"targets": 8,
				}
			],
			RowAll: true,
		},
		"router-route": {
			Title: "Route List",
			Description: "Route List",
			destroy: true,
			Class: "",
			Columns: ['Name', 'To-Address', 'Gateway', 'Distance', 'Status', 'Action'],
			ColumnVis: true,
			RowAll: true,
			AjaxFile: "router_routelist.php",
			HeaderBtn: '<a class="btn btn-' + CardColor + ' pull-right" href ="mk-route.php"><i class="material-icons">add_circle_outline</i> Add Route</a>',
			columnDefs: [{
				"targets": 5,
				"className": "td-actions",
				"render": function (data, type, row, meta) {
					return '<a href="mk-route.php?mkid=' + row[5] + '&mkip=' + PhpRadius.routerip + '" class="btn btn-primary btn-round" data-toggle="tooltip" title="Edit RouterQ" id="r_if_edit" ><i class="material-icons">edit</i></a>&nbsp;<button class="btn btn-danger btn-round PhpData" data-key="mk-route.php?remove=' + row[5] + '&mkip=' + PhpRadius.routerip + '" data-msg="Are you sure? Delete This QOS=' + row[0] + '" data-title="Delete" data-btntxt="Delete" data-btncls="btn-danger"><i class="material-icons">delete</i></button>';
				}
			}],
		},
		"router-q": {
			Title: "Static Queue List",
			Description: "Static Queue List",
			destroy: true,
			Class: "",
			Columns: ['Name', 'Target', 'Max-Limit', 'Status', 'Action'],
			ColumnVis: true,
			RowAll: true,
			HeaderBtn: "<a class='btn btn-info pull-right' href='mk-queue.php'><i class='material-icons'>add_circle_outline</i> Add Queue</a>",
			columnDefs: [{
				"targets": 4,
				"className": "td-actions",
				"render": function (data, type, row, meta) {
					return '<a href="mk-queue.php?mkid=' + row[4] + '&mkip=' + PhpRadius.routerip + '" class="btn btn-primary btn-round" data-toggle="tooltip" title="Edit RouterQ" id="r_if_edit" ><i class="material-icons">edit</i></a>&nbsp;<button class="btn btn-danger btn-round PhpData" data-key="mk-queue.php?remove=' + row[4] + '&mkip=' + PhpRadius.routerip + '" data-msg="Are you sure? Delete This QOS=' + row[0] + '" data-title="Delete" data-btntxt="Delete" data-btncls="btn-danger"><i class="material-icons">delete</i></button>';
				}
			}],
			AjaxFile: "router_qlist.php",
		},
		"mk-ifip-list": {
			Title: "Interface IP Address",
			Description: "Interface IP Address",
			Class: "",
			Columns: ['Name', 'Address', 'Network', 'Interface', 'Action'],
			ColumnVis: true,
			RowAll: true,
			AjaxFile: "s_mk-ifip-list.php",
			columnDefs: [{
				"className": "td-actions",
				"render": function (data, type, row) {
					return '<button class="btn btn-primary btn-round" id="ActEdit"><i class="material-icons">edit</i></button>&nbsp<button class="btn btn-danger btn-round" id="ActDelete" data-toggle="modal" data-target="#ajax-modal"><i class="material-icons">delete</i></button>';
				},
				"targets": 4
			}],
		},
		"router-fw": {
			Title: "Interface IP Address",
			Description: "Interface IP Address",
			Class: "",
			Columns: ['Name', 'Source Address', 'Protocol', 'Remote Address', 'Remote Port', 'Bytes', 'Status', 'Action'],
			ColumnVis: true,
			RowAll: true,
			HeaderBtn: "<a class='btn btn-" + CardColor + " pull-right' href = 'mk-firewall.php'><i class='material-icons'>add_circle_outline</i> Add  Firewall</a>",
			columnDefs: [{
				"className": "td-actions",
				"render": function (data, type, row) {
					return '<a href="mk-firewall.php?mkid=' + row[7] + '&mkip=' + PhpRadius.routerip + '" class="btn btn-primary btn-xs btn-round" data-toggle="tooltip" title="Edit Routerfw" id="r_if_edit" ><i class="material-icons" >edit</i></a><button class="btn btn-danger btn-round PhpData"  data-key="mk-firewall.php?remove=' + row[7] + '&mkip=' + PhpRadius.routerip + '" data-msg="Are you sure? Delete This Fierwall=' + row[3] + '" data-title="Delete" data-btntxt="Delete" data-btncls="btn-danger"><i class="material-icons">delete</i></button>';
				},
				"targets": 7
			}],
		},
		"router-if": {
			Title: "Router Interface",
			Description: "Router Interface Name, Speed(RX/TX), Status",
			Class: "",
			Reload: 5000,
			destroy: true,
			Columns: ['Interface Name', 'MAC Address', 'Recieved (Byte)', 'RX Speed (KB/s)', 'Transmitted (Byte)', 'TX Speed (KB/s)', 'Type', 'Status', 'Action'],
			RowAll: true,
			HeaderBtn: "<a class='btn btn-info pull-right' href='mk-vlan.php'><i class='material-icons'>add_circle_outline</i> Add VLAN</a>",
			columnDefs: [{
					"type": "file-size",
					targets: 2
				},
				{
					"type": "speed-size",
					targets: 3
				},
				{
					"type": "file-size",
					targets: 4
				},
				{
					"type": "speed-size",
					targets: 5
				},
				{
					"className": "td-actions",
					"targets": 8,
					"render": function (data, type, row, meta) {
						var str = '';
						if (row[6] == "vlan") {
							str = '<a href="mk-vlan.php?mkid=' + row[8] + '&mkip=' + PhpRadius.routerip + '" data-toggle="tooltip" title="Edit Routerif" id="r_if_edit"><button class="btn btn-primary btn-round" ><i class="material-icons">edit</i></button></a><button  title="Remove Router"  id="r_if_remove" data-tooltip="true" data-key="mk-vlan.php?remove=' + row[8] + '&mkip=' + PhpRadius.routerip + '" data-msg="Are you sure? Delete This Router Interface=' + row[0] + '" data-title="Delete" data-btntxt="Delete" data-btncls="btn-danger" class="btn btn-danger btn-round PhpData"><i class="material-icons">close</i></button>';
						}
						return '<a href="router_inf.php?if=' + row[0] + '&routerip=' + $('.selectnas').val() + '" data-toggle="tooltip" title="Routerif_graph"><button class="btn btn-info btn-round"><i class="material-icons">assessment</i></button></a>' + str;
					}
				}
			],
		},
		"nas-list": {
			Title: "NAS List",
			Description: "NAS(Router) List",
			Class: "",
			order: [
				[0, "asc"]
			],
			destroy: true,
			Columns: ['Nas Name', 'IP Address', 'Action'],
			RowAll: true,
			HeaderBtn: "<a class='btn btn-info pull-right' href='nas.php'><i class='material-icons'>add_circle_outline</i> Add NAS</a>",
			columnDefs: [{
				"className": "td-actions",
				"render": function (data, type, row) {
					return '<a href="nas.php?nasip=' + row[1] + '"<button class="btn btn-primary btn-round" data-toggle="tooltip" title="edit nas" id="editnas"><i class="material-icons">edit</i></button></a> <button class="btn btn-danger btn-round PhpData" data-key="nas_operation.php?remove=' + row[2] + '&nasip=' + row[1] + '"  data-msg="Are you sure? You want to delete ' + row[0] + '" data-title="Delete" data-btntxt="Delete" data-btncls="btn-danger"><i class="material-icons">delete</i></button>';
				},
				"targets": 2
			}, ],
		},
		"report-history": {
			Title: "Operators History",
			Description: "Operator Activity Logs",
			Class: "",
			Columns: ['Section', 'Item', 'Creation Date', 'Creation By', 'Update Date', 'Update By'],
			columnDefs: [{
					"targets": 2,
					render: $.fn.dataTable.render.moment()
				},
				{
					"targets": 4,
					render: $.fn.dataTable.render.moment()
				},
			],
			Export: true,
			ColumnVis: true,
		},
		"report-online": {
			Reload: 3000,
			Title: "Online Users",
			Description: "Online Users Available In Server",
			Class: "",
			Columns: ['User Name', 'IP Address', 'Start Time', 'Up Time', 'Nas Name', 'Total Traffic(D/U)', 'Action'],
			columnDefs: [{
					"render": function (data, type, row) {
						return '<button class="btn btn-success btn-round PhpData" value="Logout" data-key="include/management/radOperation.php?username=' + row[0] + '&disconnect=radius" data-msg="You are about to log out user ' + row[0] + '" data-title="Logout User" data-btntxt="Logout user" data-btncls="btn-success">Logout</button>';
					},
					"targets": 6
				},
				{
					"targets": 2,
					render: $.fn.dataTable.render.moment()
				},
				{
					"render": function (data, type, row) {
						var temp = (row[6] != null) ? row[6] : row[0];
						var btn = '<a href="edit-user.php?username=' + row[0] + '">' + temp + '</a>';
						return btn;
					},
					"targets": 0
				}
			],
		},
		"active-record": {
			Title: "Active Record",
			Description: "Users Account Status",
			Class: "",
			order: [PhpRadius.sortcol],
			Columns: ['User Name', 'Validity', 'Start Time', 'Used Time', 'Status', 'Expiry'],
			columnDefs: [{
					"render": function (data, type, row) {
						var temp = (row[8] != null) ? row[8] : row[0];
						return "<a href='edit-user.php?username=" + row[0] + "'>" + temp + "</a>";
					},
					"targets": 0,
				},
				{
					"targets": 2,
					render: $.fn.dataTable.render.moment()
				},
				{
					"targets": 5,
					render: $.fn.dataTable.render.moment()
				},
			],
			RowAll: true,
			Extra: {
				createdRow: function (row, data, dataIndex) {
					if (data[4] == "Active") {
						$(row).addClass('table-success');
					} else if (data[4] == "Inactive") {
						$(row).addClass('table-info');
					} else {
						$(row).addClass('table-danger');
					}
				}
			},
			AjaxFile: "s_active-record.php" + PhpRadius.BtnUrl,
		},
		"report-contrack": {
			Reload: 5000,
			Title: "Connection Attempt",
			Description: "User Connection Status",
			Class: "",
			Columns: ['User Name', 'Start Time', 'MAC Address', 'NAS IP', 'Status', 'Message', 'Action'],
			"order": [
				[1, "desc"]
			],
			ServerSide: true,
			Extra: {
				createdRow: function (row, data, dataIndex) {
					if (data[3] == "Access-Reject") {
						$(row).addClass('table-danger');
					} else {
						$(row).addClass('table-success');
					}
				}
			},
			columnDefs: [{
					"render": function (data, type, row) {
						var str = '<a href="edit-user.php?username=' + row[0] + '">' + row[0] + '</a>';
						return str;
					},
					"targets": 0
				},
				{
					"className": "td-actions",
					"render": function (data, type, row) {
						var str = '<a href="new-user.php?mac=' + row[2] + '&user_typ=mac" data-tooltip="true" title= "Create MAC User" class="btn btn-primary btn-round"><i class="material-icons">add_circle_outline</i></button>';
						return str;
					},
					"targets": 6
				},
				{
					"targets": 1,
					render: $.fn.dataTable.render.moment()
				},
			],
		},
		"sms-status": {
			Title: "SMS Status",
			Description: "SMS Status Users",
			Class: "",
			Columns: ['ID', 'Type', 'User Name', 'Contact Number', 'Sender ID', 'Sent Time', 'Status', 'Update Time'],
			columnDefs: [{
					"targets": 5,
					render: $.fn.dataTable.render.moment()
				},
				{
					"targets": 7,
					render: $.fn.dataTable.render.moment()
				}
			],
			"order": [
				[5, "desc"]
			],
			RowAll: true,
		},
		"list-voucher": {
			Title: "Vouchers",
			Description: "List of Plan Vouchers",
			Class: "",
			Columns: ['Secret', 'Plan', 'Used Date', 'Creation Date', 'Recharge'],
			HeaderBtn: "<a class='btn btn-info pull-right' href='new-voucher.php'><i class='fa fa-plus-circle'></i> Create Voucher</a>",
			AjaxFile: PhpRadius.BtnUrl,
			"order": [
				[3, "desc"]
			],
			RowAll: true,
			columnDefs: [{
					"className": "td-actions",
					"render": function (data, type, row) {
						var btn;
						if (row[4] != null) {
							btn = "<a href='edit-user.php?username=" + row[4] + "' class='btn btn-info btn-round'>" + row[4] + "</a>";
						} else {
							btn = "<input  type='button' class='btn btn-success btn-round RechargeData' data-coupne='" + row[0] + "' value='Recharge' >";
						}
						btn += "<button class='btn btn-danger btn-round PhpData'  data-key='include/management/voucherOperation.php?remove=" + row[0] + "'  data-msg='Are you sure? You want to delete Voucher " + row[0] + "' data-title='Delete' data-btntxt='Delete' data-btncls='btn-danger'><i class='material-icons'>delete</i></button>"
						return btn;
					},
					"targets": 4
				},
				{
					"targets": 2,
					render: $.fn.dataTable.render.moment()
				},
				{
					"targets": 3,
					render: $.fn.dataTable.render.moment()
				},
			],
		},
		"list-invoice": {
			Title: "List Invoices",
			Description: "List Invoices Users",
			Class: "",
			Columns: ['Invoice', 'User Name', 'Client Name', 'Creation Date', 'Status', 'Total Billed', 'Creation By', 'Action'],
			columnDefs: [{
					"render": function (data, type, row) {
						return temp = (row[8] != null) ? row[8] : row[1];
					},
					"targets": 1
				},
				{
					"className": "td-actions",
					"render": function (data, type, row) {
						var btn = "<a href='edit-bill-invoice.php?invoice_id=" + row[9] + "' class='btn btn-info btn-round'><i class='material-icons'>edit</i></a>&nbsp;&nbsp;&nbsp;";
						if (row[4] == "paid") {
							btn += "<a href='include/common/printinvoice.php?invoice_id=" + row[9] + "&destination=print' class='btn btn-success btn-round'><i class='material-icons'>print</i></button></a>";
						} else {
							btn += "<a href='new-billing-payment.php?userid=" + row[7] + "' class='btn btn-info btn-round'><i class='material-icons'>account_balance_wallet</i></button></a>";
						};
						return btn;
					},
					"targets": 7
				},
				{
					"targets": 3,
					render: $.fn.dataTable.render.moment("DD-MM-YYYY", "YYYY-MM-DD", false)
				},
			],
			Export: true,
			//ColumnVis: true,
			RowAll: true,
			HeaderBtn: '<div class="row pull-right"><div class="col-md-auto"><input type="text" name="invoicedaterange" id="invoicedaterange" autocomplete="off" class="form-control text-white" value="' + PhpRadius.startdate + '-' + PhpRadius.enddate + '"></div><div class="col-md-auto"><a class="btn btn-' + CardColor + '" href="new-billing-payment.php' + PhpRadius.BtnUid + '"><i class="material-icons">payment</i> New Payment</a></div>' + PhpRadius.Btn + '</div>',
			"order": [
				[3, "desc"]
			],
			AjaxFile: "s_list-invoice.php" + PhpRadius.BtnUid,
		},
		"list-tempinvoice": {
			Title: "List Online Invoices",
			Description: "List Online Invoices Users",
			Class: "",
			order: [
				[2, "desc"]
			],
			Columns: ['Invoice No', 'User Name', 'Creation Date', 'Status', 'Payment Type', 'Action'],
			Export: true,
			RowAll: true,
			AjaxFile: "s_list-tempinvoice.php",
			columnDefs: [{
					"render": function (data, type, row) {
						return "<a href='edit-user.php?username=" + row[1] + "'>" + row[1] + "</a>";
					},
					"targets": 1
				},
				{
					"targets": 2,
					render: $.fn.dataTable.render.moment()
				},
				{
					"render": function (data, type, row) {
						if (data == "0") {
							return "Fail";
						} else if (data == "1") {
							return "Success";
						} else if (data == "2") {
							return "Cancel";
						} else {
							return "";
						}
					},
					"targets": 3
				},
				{
					"render": function (data, type, row) {
						var btn = "";
						var tex = "";
						var paywith = "";
						var add_charge = "";
						if (row[5] != '') {
							if (row[9] != 0) {
								tex = "IGST  :" + row[9];
							} else {
								if (row[10] != 0 && row[11] != 0) {
									tex = "SGST :" + row[10] + "CGST :" + row[11];
								}
							}
							if (row[4] == "atom") {
								paywith = "||txtid :" + row[14];
							}
							if (row[15] === null) {
								row[15] = ' ';
							}
							if (row[4] == "payu" || row[4] == "payum") {
								if (row[16] === null) {
									row[16] = ' ';
								}
								if (row[17] === null) {
									row[17] = ' ';
								}
								paywith = "||pay_url :" + row[16] + "||hashpayu :" + row[17];
							}
							if (row[13] != 0) {
								add_charge = "||Additional Charge : " + row[13];
							}
							btn = "<button data-tooltip='tooltip' title='show more' class='btn btn-xs btn-info btn-round data-morinfo' data-key='Qty : " + row[6] + "||Amount : " + row[7] + "||TAX : " + tex + "||Total : " + row[12] + add_charge + "||Status Description : " + row[15] + paywith + "'><i class='material-icons'>info</i></button>";
						} else {
							btn = "--";
						}
						return btn;
					},
					"className": "td-actions",
					"targets": 5
				}
			],
		},
		"list-payment": {
			Title: "List Payment",
			Description: "List Payment Invoices Users",
			Class: "",
			order: [
				[3, "desc"],
				[0, "desc"]
			],
			Columns: ['ID', 'User Name', 'Amount', 'Date', 'Creation By', 'Payment Type'],
			RowAll: true,
			HeaderBtn: '<div class="row pull-right"><div class="col-md-auto"><input type="text" name="paymentdaterange" id="paymentdaterange" autocomplete="off" class="form-control text-white" value="' + PhpRadius.startdate + '-' + PhpRadius.enddate + '"></div><div class="col-md-auto"><a class="btn btn-' + CardColor + ' pull-right" href="new-billing-payment.php' + PhpRadius.BtnUid + '"><i class="material-icons">payment</i> New Payment</a>',
			AjaxFile: "s_list-payment.php" + PhpRadius.BtnUid,
			columnDefs: [{
					"render": function (data, type, row) {
						return temp = (row[6] != null) ? row[6] : row[1];
					},
					"targets": 1,
				},
				{
					"render": function (data, type, row) {
						var btn = "<a href='edit-bill-payment.php?payment_id=" + row[0] + "'>" + row[0] + "</a>";
						return btn;
					},
					"targets": 0,
				},
				{
					"targets": 3,
					render: $.fn.dataTable.render.moment("DD-MM-YYYY", "YYYY-MM-DD", false)
				},
			],
		},
		"record-all": {
			Title: "Search Result",
			Description: "Search Result Users",
			Class: "",
			order: [
				[4, "desc"]
			],
			Columns: ['ID', 'User Name', 'IP Address', 'MAC Address', 'Start Time', 'Stop Time', 'Total Time', 'Upload (Bytes)', 'Download (Bytes)', 'Termination', 'NAS IP Address'],
			columnDefs: [{
					"type": "file-size",
					targets: 7
				},
				{
					"type": "file-size",
					targets: 8
				}
			],
			ServerSide: true,
			RowAll: true,
			HeaderBtn: '<a class="btn btn-' + CardColor + ' pull-right" href="record-all-search.php"><i class="material-icons">arrow_back_ios</i>Return</a>',
			AjaxFile: "s_all-record.php?sSearch=" + PhpRadius.SUrl,
			columnDefs: [{
					"render": function (data, type, row) {
						var btn = "<a href='edit-user.php?username=" + row[1] + "'>" + row[1] + "</a>";
						return btn;
					},
					"targets": 1
				},
				{
					"targets": 4,
					render: $.fn.dataTable.render.moment()
				},
				{
					"targets": 5,
					render: $.fn.dataTable.render.moment()
				},
			],
			Extra: {
				dom: "<'row'<'col-sm-8'B>>" +
					"<'row'<'col-sm-12'tr>>" +
					"<'row'<'col-sm-5'i><'col-sm-7'p>>",
			}
		},
		"router-neigh": {
			Title: "CPE Devices",
			Description: "Show Mikrotik, ubnt and cisco From Network",
			Class: "",
			Reload: 5000,
			Columns: ['Name', 'IP Address', 'Mac-Address', 'Interface', 'Uptime', 'Platform'],
			ServerSide: false,
			destroy: true,
			HeaderBtn: PhpRadius.BtnUrl,
			columnDefs: [{
				"className": "td-actions",
				"targets": -1,
				"data": null,
				"defaultContent": "<button class='btn btn-primary btn-round' data-toggle='modal' title='Mac Vendor'  id='macModal1' data-tooltip='true' data-target='#macModal'><i class='material-icons'>build</i></button>"
			}, {
				"render": function (data, type, row) {
					var btn = "<a href='http://" + row[1] + "' target='_blank'>" + row[1] + "</a>";
					return btn;
				},
				"targets": 1,
			}],
			RowAll: true,
			AjaxFile: "router_neighlist.php",
		},
		"edit-user": {
			Title: "edit-user",
			Description: "edit-user",
			Class: "",
			Columns: ['Plan Name', 'Qty', 'Rem Qty', 'Amount', 'Active', 'Recharge', 'Plan Type', 'Action'],
			order: [
				[4, "asc"]
			],
			ServerSide: false,
			Export: true,
			RowAll: true,
			AjaxFile: "advance_plan_list.php?username=" + PhpRadius.BtnUrl,
			columnDefs: [{
					"render": function (data, type, row) {
						if (data == "0") {
							return "Inactive";
						} else if (data == "1") {
							return "Active";
						} else if (data == "2") {
							return "Expired";
						} else {
							return "";
						}
					},
					"targets": 4
				},
				{
					"targets": 5,
					render: $.fn.dataTable.render.moment('DD-MM-YYYY HH:mm')
				}, {
					"targets": 6,
					render: function (data, type, row) {
						var str = "Plan"
						if (data == 1) {
							str = "Topup"
						}
						return str;
					}
				}, {
					"render": function (data, type, row) {
						var btn = "";
						if (row[6] == 1) {
							btn += "<a  href='#delete' data-target='#topupdelete' data-toggle='modal' data-tooltip='tooltip' title='delete' class='btn btn-xs btn-danger btn-round' id='Delete-topup-Plan-edit'><i class='material-icons'>delete</i></a>";
						} else {
							btn += "<a  href='#add' data-target='#editadvplan' data-toggle='modal' data-tooltip='tooltip' title='edit' class='btn btn-xs btn-primary btn-round' id='Edit-Adv-Plan'><i class='material-icons'>edit</i></a>";
							var updt = moment.utc(row[8]).utcOffset(PhpRadius.tzDiff).format('DD-MM-YYYY HH:mm');
							var planstart = moment.utc(row[9]).utcOffset(PhpRadius.tzDiff).format('DD-MM-YYYY HH:mm');
							var oldexp = moment.utc(row[10]).utcOffset(PhpRadius.tzDiff).format('DD-MM-YYYY HH:mm');
							var newexp = moment.utc(row[11]).utcOffset(PhpRadius.tzDiff).format('DD-MM-YYYY HH:mm');
							btn += "<button type='button' data-tooltip='tooltip' title='show more' class='btn btn-xs btn-info btn-round data-morinfo' data-key='Plan Started Date : " + planstart + "||Recharge Update Date : " + updt + "||Old Expiry Date : " + oldexp + "||Change Expiry Date : " + newexp + "'><i class='material-icons'>info</i></button>";
							if (row[4] != "1") {
								btn += "<a  href='#delete' data-target='#delete' data-toggle='modal' data-tooltip='tooltip' title='delete' class='btn btn-xs btn-danger btn-round' id='Delete-Adv-Plan-edit'><i class='material-icons'>delete</i></a>";
							} else if (row[12] == 1 || (row[13] != 0 && row[13] != null && row[13] != "")) {
								btn += "<a  href='#add' data-target='#topupplan' data-toggle='modal' data-tooltip='tooltip' title='Topup Recharge' class='btn btn-xs btn-warning btn-round' id='topup-Plan'><i class='material-icons'>payment</i></a>";
							}
						}
						return btn;
					},
					"className": "td-actions",
					"targets": 7
				}
			],
		},
		"advance-recharge": {
			Title: "Advance-Recharge",
			Description: "Advance-Recharge Detail",
			Class: "",
			Columns: ['User Name', 'Plan Name', 'Qty', 'Rem Qty', 'Amount', 'Active', 'Recharge', 'Plan Type', 'Action'],
			order: [
				[6, "desc"]
			],
			ServerSide: false,
			Export: true,
			RowAll: true,
			HeaderBtn: "<div class='input-group no-border'><input class='form-control s_user' data-url='advance-recharge.php?username=' id='advrecharge' value='" + PhpRadius.InputName + "'  type='text' name='username' placeholder='Search User' autocomplete='off'></div>",
			AjaxFile: "advance_plan_list.php" + PhpRadius.BtnUrl,
			columnDefs: [{
					"render": function (data, type, row) {
						if (data == "0") {
							return "Inactive";
						} else if (data == "1") {
							return "Active";
						} else if (data == "2") {
							return "Expired";
						} else {
							return "";
						}
					},
					"targets": 5
				},
				{
					"targets": 6,
					render: $.fn.dataTable.render.moment('DD-MM-YYYY HH:mm')
				}, {
					"targets": 7,
					render: function (data, type, row) {
						var str = "Plan"
						if (data == 1) {
							str = "Topup"
						}
						return str;
					}
				}, {
					"render": function (data, type, row) {
						var btn = "";
						if (row[7] == 0) {
							var updt = moment.utc(row[9]).utcOffset(PhpRadius.tzDiff).format('DD-MM-YYYY HH:mm');
							var planstart = moment.utc(row[10]).utcOffset(PhpRadius.tzDiff).format('DD-MM-YYYY HH:mm');
							var oldexp = moment.utc(row[11]).utcOffset(PhpRadius.tzDiff).format('DD-MM-YYYY HH:mm');
							var newexp = moment.utc(row[12]).utcOffset(PhpRadius.tzDiff).format('DD-MM-YYYY HH:mm');
							btn = "<button data-tooltip='tooltip' title='show more' class='btn btn-xs btn-info btn-round data-morinfo' data-key='Plan Started Date : " + planstart + "||Recharge Update Date : " + updt + "||Old Expiry Date : " + oldexp + "||Change Expiry Date : " + newexp + "'><i class='material-icons'>info</i></button>";
							if (row[5] != "1") {
								//~ btn+="<a href='#delete' data-target='#delete-adv' data-toggle='modal' data-tooltip='tooltip' title='delete' class='btn btn-xs btn-danger btn-round' id='Delete-Adv-Plan'><i class='material-icons'>delete</i></a>";
								btn += "<button data-tooltip='tooltip' title='delete' class='btn btn-xs btn-danger btn-round ' id='Delete-Adv-Plan'><i class='material-icons'>delete</i></a>";
							}
						} else {
							btn = "--";
						}
						return btn;
					},
					"className": "td-actions",
					"targets": 8
				}
			],
		},
		"user-login-list": {
			Title: "User Login",
			Description: "User Last Login/Logout Time",
			Class: "",
			Columns: ['User Name','Creation Date', 'Last Login Time', 'Last Logout Time'],
			order: [
				[1, "asc"],
				[0, "asc"]
			],
			ServerSide: false,
			Export: true,
			RowAll: true,
			AjaxFile: "s_user-login-list.php",
			columnDefs: [{
					"render": function (data, type, row) {
						var name = row[0];
						if (row[4] != '' && row[4] != null) {
							name = row[4] + "[" + row[0] + "]";
						}
						return "<a href='edit-user.php?username=" + row[0] + "'>" + name + "</a>";
					},
					"targets": 0
				},
				{
					"targets": 1,
					render: $.fn.dataTable.render.moment()
				},
				{
					"targets": 2,
					render: $.fn.dataTable.render.moment()
				}, {
					"targets": 3,
					render: $.fn.dataTable.render.moment()
				},
			],
		},
		"user-disable-list": {
			Title: "User Disable list",
			Description: "List of disable user and enable particular user",
			Class: "",
			Columns: ['User Name', 'Enabal'],
			order: [0, "asc"],
			ServerSide: false,
			Export: true,
			RowAll: true,
			AjaxFile: "s_user-disable-list.php",
			columnDefs: [{
				"render": function (data, type, row) {
					var name = row[0];
					if (row[1] != '' && row[1] != "null" && row[1] != null) {
						name = row[1] + "[" + row[0] + "]";
					}
					return "<a href='edit-user.php?username=" + row[0] + "'>" + name + "</a>";
				},
				"targets": 0
			}, {
				"render": function (data, type, row) {
					return "<input type='button' class='btn btn-success btn-round di-li-enabal' name='enable' id='enableuser' data-toggle='modal'  data-target='#enabal-user' value='Enable User'/>";
				},
				"className": "td-actions",
				"targets": 1
			}],
		},
		"session_used": {
			Title: "Session Used",
			Description: "User Seession",
			Class: "",
			Columns: ['Start Time', 'Stop Time', 'Download', 'Upload'],
			//order: [[0,"desc"],[1, "desc" ]],
			ServerSide: false,
			Export: true,
			HeaderBtn: '<div class="form-group pull-right"><div class="col-md-auto"><label for="type" style="color:white;">Select Type</label><select name="type" id="type" style="width: 100%" class="form-control selection selection_temp select2"><option value="day" selected>day</option><option value="week">week</option><option value="month">month</option></select></div></div>',
			RowAll: true,
			AjaxFile: "s_session-used.php" + PhpRadius.BtnUrl,
			columnDefs: [{
				"targets": 0,
				render: $.fn.dataTable.render.moment()
			}, {
				"targets": 1,
				render: $.fn.dataTable.render.moment()
			}, ],
		},
	}

	/*** Modal All All Control reset ***/
	$('.modal').on('hidden.bs.modal', function () {
		$(this).find("input,textarea")
			.val('')
			.end()
			.find("input[type=checkbox], input[type=radio]")
			.prop("checked", "")
			.end()
			.find("ul,li").empty();
	});
	/*** Modal All All Control reset ***/

	/*** Mk Function***/

	function get_mk_data(type) {
		PhpRadius.AjaxData = {};
		PhpRadius.AjaxData.routerip = PhpRadius.routerip;
		PhpRadius.AjaxData.type = type;
		ajax_call(ServerScript + "getmkdata.php", PhpRadius.AjaxData, function (ret) {
			var data = JSON.parse(ret);
			GenSelectOpt(data);
		});
	}

	/*selet select option to give data*/
	function GenSelectOpt(data) {
		$.each(data, function (a, b) {
			var selopt = $('[data-mikrotik="' + a + '"]')
			$('option', selopt).remove();
			$.each(b, function (x, y) {
				selopt.append($("<option></option>").attr("value", y).text(y));
			});
			selopt.val($(selopt).attr('value'));
		});
	}

	/*** Mk Function***/
	/*** invoice function ***/
	function getdisc() {
		var disctype = $('#disctype').prop('checked');
		return disctype;
	}

	function calctax(total) {
		var tax = PhpRadius.add_tax;
		var amount = (total * tax) / 100;
		amount = total + amount;
		return amount;
	}

	function calcdisc(total) {
		var disc = $('#discount').val();
		var disctype = getdisc();
		if (disctype == false) {
			var amount = total - disc;
		} else {
			var amount = (total * disc) / 100;
			amount = total - amount;
		}
		return amount;
	}

	function DateMoment(row) {
		if (row != null &&
			row != "0000-00-00 00:00:00" &&
			row != "--" &&
			row != "0000-00-00") {
			var ret = moment(row).utcOffset(PhpRadius.tzDiff).format('DD-MM-YYYY HH:mm:ss');
			return ret;
		} else {
			return "00-00-0000 00:00:00";
		}
	}

	function calctotal() {
		var amount = $('#total_amount').val();
		var qty = $('#qty').val();
		var total = amount * qty;
		var disctotal = calcdisc(total);
		var taxtotal = calctax(disctotal);
		return taxtotal;
	}

	function settotal() {
		var total = calctotal();
		$('#totalbilled').val(total);
	}

	$('.cashcheck').on('ifChecked', function (event) {
		var checked = this.id;
		var chkid = $('.cashcheck').map(function () {
			return this.id;
		}).get();
		uncheck = chkid.filter(e => e !== checked);
		uncheck = uncheck[0];
		$('#' + uncheck + '').iCheck('uncheck');
		$('#pay_bill').val($('#totalbilled').val());
	});

	$('.cashcheck').on('ifUnchecked', function (event) {
		$('#pay_bill').val("0.00");
	});

	$('#cashpayment').change(function () {
		var disctype;
	});

	$('.billing').change(function () {
		settotal();
	});

	function CreateTable(FileParam) {
		PhpRadius.ServerFile = '';
		var TableOpt = {
			language: {
				search: "_INPUT_",
				searchPlaceholder: "Search..."
			},
			dom: "<'row'<'col-sm-8'B><'col-sm-4'f>>" +
				"<'row'<'col-sm-12'tr>>" +
				"<'row'<'col-sm-5'i><'col-sm-7'p>>",
			lengthMenu: [
				[10, 25, 50, 100],
				['10 rows', '25 rows', '50 rows', '100 rows']
			],
			buttons: [
				'pageLength'
			],
			responsive: {
				details: {
					display: $.fn.dataTable.Responsive.display.childRowImmediate,
					type: ''
				}
			},
			ajax: {
				type: "get",
				xhr: function () { // unknown code, may be use to remove pending request
					var xhr = $.ajaxSettings.xhr();
					if (initprocess != 0) {
						xhr.abort();
						Table.settings()[0].jqXHR.abort();
					}
					initprocess = 1;
					xhr.upload.onprogress = function (e) {
						xhr.abort();
						//abort all current request here
					};
					return xhr;
				},
				error: function () {}
			},
			'initComplete': function (settings, json) {
				HideSpin();
				//code here
			},
		};
		if (FileParam.ServerSide != undefined && FileParam.ServerSide == true) {
			TableOpt.bServerSide = FileParam.ServerSide;
			//TableOpt.bProcessing=true;
		}

		if (FileParam.columnDefs != undefined) {
			TableOpt.columnDefs = FileParam.columnDefs;
		}

		if (FileParam.order != undefined) {
			TableOpt.order = FileParam.order;
		}

		if (FileParam.RowAll != undefined && FileParam.RowAll == true) {
			TableOpt.lengthMenu = [
				[10, 25, 50, 100, -1],
				['10 rows', '25 rows', '50 rows', '100 rows', 'All Rows']
			];
		}

		if (FileParam.Export != undefined && FileParam.Export == true) {
			TableOpt.buttons = [
				'pageLength',
				{
					extend: 'copyHtml5',
					text: '<i class="material-icons">file_copy</i>',
					titleAttr: 'Copy'
				},
				{
					extend: 'excelHtml5',
					text: '<i class="material-icons">explicit</i>',
					titleAttr: 'Excel'
				},
				{
					extend: 'pdfHtml5',
					text: '<i class="material-icons">picture_as_pdf</i>',
					titleAttr: 'PDF'
				},
				{
					extend: 'print',
					text: '<i class="material-icons">print</i>',
					titleAttr: 'Print',
					exportOptions: {
						columns: ':visible'
					}
				}
			]
		}

		if (FileParam.ColumnVis != undefined && FileParam.ColumnVis == true) {
			TableOpt.buttons.push({
				extend: 'colvis',
				text: 'Column',
				titleAttr: 'Column'
			});
		}

		$.extend(true, TableOpt, FileParam.Extra);

		if (FileParam.AjaxFile == undefined) {
			PhpRadius.ServerFile = ServerScript + "s_" + Url + ".php";
		} else {
			PhpRadius.ServerFile = ServerScript + FileParam.AjaxFile;
		}
		ServerUrl = PhpRadius.ServerFile;

		if (PhpRadius.NasTable != undefined) {
			PhpRadius.routerip = $('#SelectNas').val();
			PhpRadius.ServerFile = PhpRadius.ServerFile + '?routerip=';
			ServerUrl = PhpRadius.ServerFile + PhpRadius.routerip;
			Select2Nas();
		}

		TableOpt.ajax.url = ServerUrl;
		Table = $('#' + Url).on('preXhr.dt', function (e, settings, data) {
			if (settings.jqXHR) settings.jqXHR.abort();
		}).on('xhr.dt', function (e, settings, json, xhr) {
			if (json.tzDiff != undefined) {
				PhpRadius.tzDiff = parseInt(json.tzDiff) / 60;
			}
			initprocess = 0;
		}).DataTable(TableOpt);

		function tblReload() {
			clearTimeout(PhpRadius.tbltimeout);
			//Table.settings()[0].jqXHR.abort();
			if (PhpRadius.NasTable != undefined) {
				PhpRadius.routerip = $('#SelectNas').val();
				ReloadUrl = PhpRadius.ServerFile + PhpRadius.routerip;
			} else {
				ReloadUrl = PhpRadius.ServerFile;
			}
			PhpRadius.tbltimeout = setTimeout(function () {
				Table.ajax.url(ReloadUrl).load(tblReload, false);
			}, FileParam.Reload);
		}

		if (FileParam.Reload != undefined) {
			tblReload();
		}
	};

	function CalcPer(u, t) {
		var p = ((u / t) * 100);
		return p;
	}
	/*NAS Dashbord*/
	var AutoCallNas = 0;

	function NasDashbord() {
		if (AutoCallNas != undefined) {
			clearTimeout(AutoCallNas);
		}
		ajax_call("serverscript/router_status.php", {
			'routerip': PhpRadius.routerip
		}, function (e) {
			var data = JSON.parse(e);
			if (data.status) {
				data["tot-online"] = (parseInt(data["ppp-user"]) + parseInt(data["hs-user"]));
				data["used-mem"] = (parseInt(data["total-memory"]) - parseInt(data["free-memory"]));
				data["used-hdd"] = (parseInt(data["total-hdd-space"]) - parseInt(data["free-hdd-space"]));
				data["per-mem"] = parseInt(CalcPer(data["used-mem"], data["total-memory"]));
				data["per-hdd"] = parseInt(CalcPer(data["used-hdd"], data["total-hdd-space"]));
				jQuery.each(data, function (k, v) {
					$("#" + k).text(v);
				});
				$('#router_option').show();
			} else {
				$('#router_option').hide();
			}
		});
		AutoCallNas = setTimeout(function () {
			NasDashbord();
		}, PhpRadius.timeout ? 3000 : 500);
		PhpRadius.timeout = true;
	}

	function LoadTable() {
		if (TablesList[Url] != undefined) {
			var FileParam = TablesList[Url];
			$('.php-title').html(FileParam.Title);
			$('.php-category').html(FileParam.Description);
			$('.card-BtnUrl').html(FileParam.HeaderBtn);
			var Tbl = '<table id="' + Url + '" class="table table-striped norap display table-bordered ' + FileParam.Class + '" cellspacing="0" width="100%" style="width:100%">';
			Tbl += '<thead><tr>';
			$.each(FileParam.Columns, function (i, name) {
				Tbl += '<th>' + name + '</th>';
			});
			Tbl += '</tr></thead><tbody></tbody></table>';
			$('.nas_table').html(Tbl);
			if (PhpRadius.NasTable != undefined) {
				Select2Nas();
				if (PhpRadius.routerip != undefined) {
					CreateTable(TablesList[Url]);
				}
			} else {
				CreateTable(TablesList[Url]);
			}
		} else {
			if (Url == "index_router") {
				Select2Nas();
				if (PhpRadius.routerip != undefined) {
					if (routerip != PhpRadius.routerip && routerip != null) {
						graph_clear();
					}
					routerip = PhpRadius.routerip;
					drawGraph();
					NasDashbord();
				}
			}
		}
	}

	if ($('#SelectNas').val() != "" && $('#SelectNas').val() != undefined) {
		PhpRadius.routerip = $('#SelectNas').val();
	}
	LoadTable();

	/*** Ajax page from mikrotik configurations   ***/

	PhpRadius.FormData = {};
	PhpRadius.FormData.action = "add";
	PhpRadius.AjaxUrl = "mk-ifip.php"

	function NotifyAjax(m) {
		m = JSON.parse(m);
		$.notify({
			icon: '',
			message: m.msg
		}, {
			type: m.type,
			placement: {
				from: 'top',
				align: 'right'
			}
		});
	}

	function ModalClose() {
		$('#ajax-modal').modal('hide');
	}

	function AjaxSend() {
		PhpRadius.FormData.nasip = PhpRadius.routerip;
		console.log(PhpRadius.FormData);
		ajax_call(PhpRadius.AjaxUrl, PhpRadius.FormData, function (m) {
			NotifyAjax(m);
			ClearForm();
			ModalClose();
			Table.ajax.reload();
		});
	}

	function ClearForm() {
		PhpRadius.FormData = {};
		$('input[data-rowid]').val("");
		$('select[data-rowid]').val(null).trigger('change');
		$('.ptitle').html("Add IP Address");
		PhpRadius.FormData.action = "add";
		PhpRadius.FormData.nasip = PhpRadius.routerip;
		$('#cust_name').focus();
	}

	function EditForm() {
		$('#router_option').show();
		$('.clr').val("");
		$('.sel-clr').val(null).trigger('change');
		$('.ptitle').html("Edit IP Address");
		PhpRadius.FormData.action = "edit";
		$('.focus-form').focus();
	}

	function SetSelectData(d) {
		$("select[data-rowid]").each(function () {
			var i = $(this).data('rowid');
			$(this).val(d[i]);
			$(this).trigger('change');
		});
	}

	function SetInputData(d) {
		$("input[data-rowid]").each(function () {
			var i = $(this).data('rowid');
			$(this).val(d[i]);
		});
	}

	function SetFormData(d) {
		PhpRadius.FormData.nasip = PhpRadius.routerip;
		SetInputData(d);
		SetSelectData(d);
	}

	function GetFormData() {
		$('[data-rowid]').each(function () {
			var n = $(this).attr("name");
			var v = $(this).val();
			PhpRadius.FormData[n] = v;
		});
	}

	function GetRowFormData(d) {
		$('[data-rowid]').each(function () {
			var n = $(this).attr("name");
			var i = $(this).data("rowid");
			PhpRadius.FormData[n] = d[i];
		});
	}

	function EditForm(d) {
		ClearForm();
		$('.ptitle').html("Edit IP Address");
		SetFormData(d);
		PhpRadius.FormData.action = "edit";
		// d4 pending set data-id in table button
	}

	function DeleteForm(d) {
		ClearForm();
		$('.ptitle').html("Edit IP Address");
		PhpRadius.FormData.action = "delete";
		SetFormData(d);
	}

	$(document).on('click', '#ModalDelete', function () {
		AjaxSend();
	});

	$(document).on('click', '#ModalClose', function () {
		ClearForm();
	});

	$(document).on('click', '#btnCancel', function () {
		ClearForm();
	});

	$(document).on('click', '#btnSubmit', function () {
		// validation pending
		GetFormData();
		AjaxSend();
	});

	$(document).on('click', '#ActEdit', function () {
		var d = Table.row($(this).parents('tr')).data();
		EditForm(d);
		$('.focus-form').focus();
	});

	$(document).on('click', '#ActDelete', function () {
		var d = Table.row($(this).parents('tr')).data();
		DeleteForm(d);
		GetRowFormData(d);
	});

	/*** Ajax page from mikrotik configurations   ***/
	/*** Check User Text Box Type ***/
	$('body').on('focus keyup', '.s_user', function () {
		var val = $(this).val();
		var show_limit = 10;
		HideSpin();
		$(this).autocomplete({
			source: function (request, response) {
				ShowSpin();
				$.ajax({
					url: 'serverscript/searchuser.php',
					dataType: "json",
					method: 'post',
					data: {
						"query": val,
					},
					success: function (data) {
						response($.map(data, function (item) {
							HideSpin();
							return {
								label: item,
								value: item,
								data: item
							}
						}).slice(0, show_limit));
					}
				});
			},
			response: function (event, ui) {
				HideSpin();
			},
			autoFocus: true,
			minLength: 1,
			select: function (event, ui) {
				var names = ui.item.data;
				url = $(this).data('url');
				what = $(this).data('what');
				if (what == "check_TAX") {
					myData.custax = names;
					ajax_call(url, myData, function (data) {
						cust_gst = JSON.parse(data);
						PhpRadius.cust_gst = cust_gst;
						set_add_tax();
					});
				} else if (what == "get_bal") {
					myData.custbal = names;
					ajax_call(url, myData, function (data) {
						cust_bal = JSON.parse(data);
						$('#payment_rem').val(cust_bal);
					});
				} else if (url != undefined) {
					window.location = url + names;
				}
			}
		});
	});

	/*Vouchar recharge dialog show*/
	$('body').on('click', '.RechargeData', function (event) {
		var coupne = $(this).data('coupne');
		$(".coupne").val(coupne);
		$('#modal-recharge').modal();
	});
	/*Vouchar  Recharge dialog Button Call*/
	$('.modal-rechargebtn').click(function () {
		myData.dorecharge = 1;
		myData.username = $('.rechargeusername').val();
		myData.coupne = $('.coupne').val();
		ajax_call("include/management/voucherOperation.php", myData, function (msg) {
			location.reload();
		});
	});

	/*delete Dialog*/
	$('body').on('click', '.PhpData', function (event) {
		var key = $(this).data('key');
		var msg = $(this).data('msg');
		var title = $(this).data('title');
		var btntxt = $(this).data('btntxt');
		var btncls = $(this).data('btncls');
		if (msg != undefined) {
			document.getElementById('php-modal-msg').innerText = msg;
		}
		if (title != undefined) {
			document.getElementById('php-modal-title').innerText = title;
		}
		if (btntxt != undefined) {
			document.getElementById('php-modal-btn').innerHTML = "<i class='fa fa-spinner fa-spin' style='display:none;' id='spin'></i>" + btntxt;
		}
		if (btncls != undefined) {
			if (btncls == "btn-danger") {
				document.getElementById('php-modal-btn').classList.remove('btn-primary');
				document.getElementById('php-modal-btn').classList.add('btn-danger');
			} else {
				document.getElementById('php-modal-btn').classList.remove('btn-danger');
				document.getElementById('php-modal-btn').classList.add('btn-primary');
			}
		}
		$(".php-modal-btn").attr("href", key);
		$('#php-modal').modal();
	});
	$('body').on('click', '#php-modal-btn', function () {
		hide_control($(this));
		ShowSpin();
	});
	/*advance-recharge list button event*/
	$('body').on('click', '.data-morinfo', function (event) {
		var key = $(this).data('key');
		var key_arr = key.split("||");
		var ul = document.getElementById("dynamic-list");
		for (row in key_arr) {
			var li = document.createElement("li");
			li.setAttribute('id', row);
			li.appendChild(document.createTextNode(key_arr[row]));
			ul.appendChild(li);
		}
		$('#data-info').modal();
	});
	/*advance-recharge list button event END*/
	/*More info modale colse btn event*/
	$(document).on('click', '.rmove-ul', function (event) {
		$('#dynamic-list').empty();
	});
	/*More info modale colse btn event end*/

	$(function () {
		$('[data-toggle="popover"]').popover({
			container: 'body',
			trigger: 'focus'
		})
	})

	$(function () {
		$('[data-toggle="tooltip"]').tooltip()
	})

	$(".selectnas").on("select2:select", function (e) {
		var ip = e.params.data.id;
		PhpRadius.routerip = ip;
		if (Table !== undefined) {
			Table.clear().draw();
			clearTimeout(PhpRadius.tbltimeout);
		}
		LoadTable();
		if (PhpRadius.NasFormTable != undefined) {
			MkFormShow();
			var type = [];
			var select_name = [];
			$("div#router_option").find('select').each(function (index) {
				var val = $(this).data('mikrotik');
				var id = $(this).attr('id');
				if (val != undefined) {
					type.push(val);
					select_name.push(id);
				}
			});
			if (type.length > 0) {
				get_mk_data(type);
			}
		}
	});

	/*** sidebar activation ***/

	$(".sidebar a").each(function () {
		var link = $(this);
		if (link.get(0).href === location.href) {
			link.addClass("active").parents("li").addClass("active");
			link.addClass("active").parents("div").addClass("show");
			return false;
		}
	});

	/*** sidebar activation ***/

	$(window).resize(function () {
		$('.select2').css('width', "100%");
	});

	$('#inf_remove').on('click', function () {
		routerIfRemove(aPeram); //include in  plugins/router_modals.js
	});
	$('#routerInf').on('hidden.bs.modal', function () {
		aPeram = {}; //clear array
	});

	//----------------static router-------------------*/

	/*** modal ***/
	function hide_control(control) {
		control.attr("disabled", "disabled");
	}

	function show_control(control) {
		control.removeAttr("disabled");
	}
	$('body').on('click', '#ubntModal1', function () {
		var data = Table.row($(this).parents('tr')).data();
		showUbnt(data[1], data[2]);
	});

	$('body').on('click', '#macModal1', function () {
		var data = Table.row($(this).parents('tr')).data();
		showMac(data[2]);
	});

	/*disabal list*/
	$('body').on('click', '.di-li-enabal', function () {
		var data = Table.row($(this).parents('tr')).data();
		$('.username').val(data[0]);
	});
	$(document).on('click', '.Enabal-User', function () {
		myData.username = $('.username').val();
		myData.UserDisabalEnabal = 0;
		hide_control($(this));
		ajax_call("include/management/userOperations.php", myData, function (a) {
			location.reload();
		});
	});
	/*disabal list*/
	/*Edit User Modal Buttons*/
	$(document).on('click', '.rc', function () {
		$('#numofmonth').val("1");
		$('.none').prop('checked', true).click();
	});
	$(document).on('click', '.Recharge-Plan', function () {
		myData.username = document.getElementById('username').value;
		myData.numofmonth = document.getElementById('numofmonth').value;
		myData.planname = document.getElementById('selplanid').value;
		myData.rechargeplan = 1;
		myData.pay_typ = $('input[name=rc_payment_type]:checked').data('txt');
		hide_control($(this));
		ajax_call("include/management/userOperations.php", myData, function (msg) {
			location.reload();
		});
	});

	$(document).on('click', '.topup-Plan', function () {
		myData.username = document.getElementById('username').value;
		myData.numofmonth = document.getElementById('topupqty').value;
		myData.planname = document.getElementById('topupplanid').value;
		myData.startplanid = document.getElementById('cid').value;
		myData.topupplan = 1;
		myData.pay_typ = $('input[name=payment_type]:checked').data('txt');
		hide_control($(this));
		ajax_call("include/management/userOperations.php", myData, function (msg) {
			location.reload();
		});
	});

	$(document).on('click', '.edit-Plan', function () {
		myData.rechargeplanedit = 1;
		myData.cid = document.getElementById('cid').value;
		myData.qty = document.getElementById('qty').value;
		myData.chngnew = document.getElementById('changplan').checked;
		myData.editplan = document.querySelector('.advplanclass').value;
		hide_control($(this));
		ajax_call("include/management/userOperations.php", myData, function (msg) {
			location.reload();
		});
	});

	$(document).on('click', '.delete-TopupPlan', function () {
		myData.removetopupplan = 1;
		myData.cid = document.getElementById('cid').value;
		myData.username = document.getElementById('username').value;
		hide_control($(this));
		ajax_call("include/management/userOperations.php", myData, function (msg) {
			location.reload();
		});
	});

	$(document).on('click', '.delete-Plan', function () {
		myData.removeplan = 1;
		myData.cid = document.getElementById('cid').value;
		myData.username = document.getElementById('username').value;
		hide_control($(this));
		ajax_call("include/management/userOperations.php", myData, function (msg) {
			location.reload();
		});
	});

	$(document).on('click', '.delete-adv-Plan', function () {
		myData.removeplan = 1;
		myData.cid = document.getElementById('remadvid').value;
		myData.username = document.getElementById('remadvname').value;
		hide_control($(this));
		ajax_call("include/management/userOperations.php", myData, function (msg) {
			location.reload();
		});

	});

	$(document).on('click', '.Reset-Password', function () {
		myData.NewPassword = document.getElementById('NewPassword').value;
		myData.ucheck = document.getElementById('upass').checked;
		myData.rcheck = (document.getElementById('rpass') != undefined) ? document.getElementById('rpass').checked : false;
		myData.username = document.getElementById('username').value;
		myData.resetPassword = 1;
		hide_control($(this));
		ajax_call("include/management/userOperations.php", myData, function (msg) {
			location.reload();
		});
	});

	$(document).on('click', '.Enabal-Disabal-User', function () {
		myData.username = document.getElementById('username').value;
		myData.UserDisabalEnabal = PhpRadius.u_enable;
		hide_control($(this));
		ajax_call("include/management/userOperations.php", myData, function (a) {
			location.reload();
		});
	});

	/*Edit User Buttons End*/
	/*new and edit plna*/
	$('.plantimeduration').on("change", function () {
		var txt = $(this).val();
		if (txt == "Minute" || txt == "Hour") {
			$('#midnight').prop("checked", false);
			$('.midnight').hide();
		} else {
			$('.midnight').show();
		}
	});
	/*new and edit plna END*/
	/*edit plan*/
	$(document).on('click', '.plan_active', function () {
		var typ = $(this).data('txt');
		if (typ == 'yes') {
			$('.lbl_yes').addClass('text-primary');
			$('.lbl_no').removeClass('text-primary');
		} else {
			$('.lbl_no').addClass('text-primary');
			$('.lbl_yes').removeClass('text-primary');
		}
	});
	/*edit plan*/
	/*new payment Select Radio Button Click*/
	$(document).on('click', '.pay_typ, .rc_pay_typ', function () {
		var pay_typ = $(this).data('txt');
		if (pay_typ == 'cash') {
			$('.lbl_cash').addClass('text-primary');
			$('.lbl_chack').removeClass('text-primary');
			$('.lbl_none').removeClass('text-primary');
			if (document.getElementById("totalbilled") != undefined) {
				payment_show();
			}
		} else if (pay_typ == 'Cheque') {
			$('.lbl_chack').addClass('text-primary');
			$('.lbl_cash').removeClass('text-primary');
			$('.lbl_none').removeClass('text-primary');
			if (document.getElementById("totalbilled") != undefined) {
				payment_show();
			}
		} else {
			$('.lbl_none').addClass('text-primary');
			$('.lbl_cash').removeClass('text-primary');
			$('.lbl_chack').removeClass('text-primary');
			if (document.getElementById("totalbilled") != undefined) {
				payment_hide();
			}
		}
	});
	/*new payment Select Radio Button Click End*/

	/*Edit UserType Select Radio Button Click*/
	$('.user_typ').on('click', function (e) {
		var user_typ = $(this).val();
		if (user_typ == 'user') {
			$('.lbl_mac').hide();
			/*$('.lbl_mac').find('input:text').val('').attr('class','').addClass('form-control');//all textbox clear
			$('.lbl_mac').find('span').remove();
			$('.lbl_mac').attr('class','').addClass('form-group bmd-form-group lbl_mac');//all textbox clear*/
			$('#lbl_user').addClass('text-primary');
			$('#lbl_mac').removeClass('text-primary');
		} else {
			$('.lbl_mac').show();
			$('#lbl_mac').addClass('text-primary');
			$('#lbl_user').removeClass('text-primary');
		}
	});
	/*Edit UserType Select Radio Button Click End*/
	/*Edit User Advance Table Buttons */
	// advance-recharge
	$('body').on('click', '#Edit-Adv-Plan', function () {
		var data = Table.row($(this).parents('tr')).data();
		$('#ptital').html("Edit");
		//TEMPID = data[0];

		$('#cid').val(data[7]);
		$('.advplanclass').val(data[0]);
		$('.advplanclass').trigger('change'); // Notify any JS components that the value changed
		$('#qty	').val(data[1]);
		$('#amount').val(data[3]);
		$('#active').val(data[4]);
		if (data[4] == 1) {
			$('.chngnew').show();
		} else {
			$('.chngnew').hide();
		}
		$('#date').val(data[5]);
	});

	$('body').on('click', '#topup-Plan', function () {
		var data = Table.row($(this).parents('tr')).data();
		$('#cid').val(data[7]);
		$('#topupqty').val("1");
		$('.none').prop("checked", true).click();
	});

	$('body').on('click', '#Delete-Adv-Plan-edit', function () {
		var data = Table.row($(this).parents('tr')).data();
		$('#cid').val(data[7]);
	});

	$('body').on('click', '#Delete-topup-Plan-edit', function () {
		var data = Table.row($(this).parents('tr')).data();
		$('#cid').val(data[7]);
	});

	$('body').on('click', '#Delete-Adv-Plan', function (e) {
		var data = Table.row($(this).parents('tr')).data();
		//~ $('#remadvid').val(data[8]);
		//~ $('#remadvname').val(data[0]);
		e.preventDefault();
		Swal({
			title: 'Are you sure?',
			text: "Delete records?!",
			type: 'warning',
			showCancelButton: true,
			confirmButtonColor: '#3085d6',
			cancelButtonColor: '#d33',
			confirmButtonText: 'Yes, delete it!'
		}).then((result) => {
			if (result.value) {
				console.log('delete');
				myData.removeplan = 1;
				myData.cid = data[8];
				myData.username = data[0];
				hide_control($(this));
				Swal('Deleted!',
					'Your file has been deleted.',
					'success'
				).then(function () {
					ajax_call("include/management/userOperations.php", myData, function (msg) {
						location.reload();
					});
				});

			} else {
				Swal(
					'cancel!',
					'Your file has safe:).',
					'error'
				)
			}
		})
	});
	/*Edit User Advance Table Buttons */

	/*** modal ***/

	$("[number]").inputmask("99999");
	$("[validity]").inputmask('Regex', {
		regex: "[0-9]{1,4}[h|H|d|D|m|M|y|Y]"
	});
	$("[port]").inputmask('Regex', {
		regex: "^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"
	});

	//~ change this class
	$('.selection_temp').select2({
		theme: 'bootstrap',
		placeholder: 'Select Plan'
	});

	$('.sel2').select2({
		theme: 'bootstrap',
		width: '100%',
		placeholder: 'Select Data',
		minimumResultsForSearch: 'Infinity'
	});

	$('.logsel2').select2({
		theme: 'bootstrap',
		placeholder: 'Select Data',
	});

	$('.select_int').select2({
		theme: 'bootstrap',
		placeholder: 'Select Interface'
	});

	$('.selection_modal').select2({
		theme: 'bootstrap',
		placeholder: 'Select Plan',
		dropdownParent: $('#RechargeModal')
	});

	$('.advplanclass').select2({
		theme: 'bootstrap',
		placeholder: 'Select Plan',
		dropdownParent: $('#editadvplan')
	});

	$('.selection_timezone').select2({
		theme: 'bootstrap',
		placeholder: 'Select TimeZone'
	});

	$('.franchisee-list').select2({
		theme: 'bootstrap',
		width: '100%',
		placeholder: 'Select Franchisee'
	});

	$('.nas_status').select2({
		theme: 'bootstrap',
		width: 'resolve',
		placeholder: 'Select Nas'
	});
	//  change this class
	var selectnascount = $('.selectnas option').length; // 3
	var $selectSingle = $('.selection-single').select2({
		theme: 'bootstrap',
		placeholder: 'Select or add mac address',
		allowClear: true,
		//tags: true
	});
	$('.selection-multiple').select2({
		theme: 'bootstrap',
		width: '100%',
		tags: true
	});
	/***sms_template ***/
	var sms = {};
	sms.newuser = ["USERNAME", "PLAN_NAME"];
	sms.expr = ["USERNAME", "END_DATE"];
	sms.reassign = ["USERNAME", "NEW_PLAN", "AMOUNT"];
	sms.recharge = ["USERNAME", "PLAN_NAME", "AMOUNT"];
	sms.resetpwd = ["USERNAME", "PASSWORD"];
	sms.sendotp = ["USERNAME", "PASSWORD"];
	$('body').on('click', '.SmsData', function (event) {
		var typ = $(this).data('typ');
		var msg = document.getElementById('f_' + typ).textContent;
		$('#sms-modal-msg').val(msg);
		$('#sms-typ').val(typ);
		$('#sms-modal').modal();
	});
	$('#sms-modal-btn').on('click', function () {
		var sms_value = document.getElementById('sms-modal-msg').value;
		var sms_typ = document.getElementById('sms-typ').value;
		var s_data = document.getElementById('f_' + sms_typ);
		s_data.innerHTML = sms_value;
		var ccheck = 0,
			len = sms[sms_typ].length;
		for (index = 0; index < len; index++) {
			ret = sms_value.search('###' + sms[sms_typ][index] + '###');
			if (ret < 0) {
				ccheck = 1;
				break;
			}
		}
		if (ccheck == 1) {
			$('.done-success-' + sms_typ).removeClass("text-success").addClass("text-danger");
			NotifyMsg("###" + sms[sms_typ][index] + "### Not Search @danger");
		} else {
			$('.done-success-' + sms_typ).removeClass("text-danger").addClass("text-success");
			myData.typ = sms_typ;
			myData.template = sms_value;
			ajax_call(ServerScript + "create_sms_file.php", myData, function (msg) {
				NotifyMsg(msg);
			});
		}
		$('.modal').modal('hide');
	});
	/*** sms_Template***/

	/*** Unchecked code ***/

	//mk-nasip Config all page add or edit
	if ($('#select_nasip').val() != undefined && $('#select_nasip').val() != '') {
		MkNasChange();
		$("#select_nasip").attr("readonly", "true");
	}

	function MkNasChange() {
		MkFormShow();
		ip = $('#select_nasip').val();
		PhpRadius.routerip = ip;
		var type = [];
		var select_name = [];
		$("div#router_option").find('select').each(function (index) {
			var val = $(this).data('mikrotik');
			var id = $(this).attr('id');
			if (val != undefined) {
				type.push(val);
				select_name.push(id);
			}
		});
		if (type.length > 0) {
			get_mk_data(type);
		}
	}

	function MkFormShow() {
		$('#router_option').show();
	}

	function MkFormHide() {
		$('#router_option').hide();
	}

	$('#select_nasip').on('change', function () {
		if (this.value == "") {
			NotifyMsg("Please Select Router First..! @danger");
			$("#select_nasip").focus();
			MkFormHide();
			return;
		} else {
			MkNasChange();
		}
	});

	//show unused ip fro edit/new user
	$('body').on("change", "#un_nasip", function () {
		$('#un_iprange').empty().trigger("change");
		$('#un_ip').empty().trigger("change");
		myData.nasip = $(this).val();
		if (myData.nasip != 0 && myData.nasip != null) {
			ajax_call("serverscript/unusediplist.php", myData, function (data) {
				$('#un_iprange').select2({
					'data': JSON.parse(data)
				});
			});
		}
	});
	$('body').on("change", "#un_iprange", function () {
		$('#un_ip').empty().trigger("change");
		myData.nasip = $("#un_nasip").val();
		myData.iprange = $(this).val();
		if (myData.iprange != 0 && myData.iprange != null) {
			ajax_call("serverscript/unusediplist.php", myData, function (data) {
				var data = JSON.parse(data);
				$('#un_ip').select2({
					'data': data
				});
			});
		}
	});
	$('body').on("change", "#un_ip", function () {
		$ip = $(this).val();
		if ($ip == 0 || $ip == null) {
			$('#selUnIp').hide();
		} else {
			$('#selUnIp').show();
		}
	});
	$('body').on('click', ".unusedipbtnclear", function () {
		$('#un_nasip').val(null).trigger("change");
	});
	$('body').on('click', ".unusedipbtn", function () {
		$('#un_nasip').val(null).trigger("change");
	});
	$('body').on('click', "#selUnIp", function () {
		$('#ip_address').val($("#un_ip").val());
		$('.unusedipbtnclear').click();
	});
	//edit-user
	//~ $(".dropdown-menu li a").click(function(){
	//~ $("#"+$(this).data("id")).text($(this).text());
	//~ $("#"+$(this).data("id")).val($(this).text());
	//~ });
	//form validation functions
	//for ip address validation
	$.formUtils.addValidator({
		name: 'ip_address',
		validatorFunction: function (value, $el, config, language, $form) {

			if (/^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.)){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(value)) {
				return true;
			}
			return false;
		},
		errorMessage: 'You have to input with correct ip address',
		errorMessageKey: 'badIpAddress'
	});

	//for mac address validation
	$.formUtils.addValidator({
		name: 'mac_address',
		validatorFunction: function (value, $el, config, language, $form) {

			if (/^([0-9A-Fa-f]{2}[:]){5}([0-9A-Fa-f]{2})$/.test(value)) {
				return true;
			}
			return false;
		},
		errorMessage: 'You have to input with correct mac address',
		errorMessageKey: 'badMacAddress'
	});

	//for ip subnet mask validation
	$.formUtils.addValidator({
		name: 'ip_subnet_mask',
		validatorFunction: function (value, $el, config, language, $form) {

			if (/^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.)){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)[\/](25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(value)) {
				return true;
			}
			return false;
		},
		errorMessage: 'You have to input with correct ip subnet mask',
		errorMessageKey: 'badIpSubnetMask'
	});
	//for address validation
	$.formUtils.addValidator({
		name: 'address',
		validatorFunction: function (value, $el, config, language, $form) {
			if (/^([a-zA-Z0-9._, ]+)$/.test(value)) {
				return true;
			}
			return false;
		},
		errorMessage: 'You have to input address with a-zA-z0-9 and . _ symboles',
		errorMessageKey: 'badAddress'
	});

	//for contact no validation
	$.formUtils.addValidator({
		name: 'contact_no',
		validatorFunction: function (value, $el, config, language, $form) {
			if (/^([+]?[0-9]+)$/.test(value)) {
				return true;
			}
			return false;
		},
		errorMessage: 'You have to input contact number with only digits',
		errorMessageKey: 'badContactNo'
	});

	//for GST validation
	$.formUtils.addValidator({
		name: 'gst',
		validatorFunction: function (value, $el, config, language, $form) {
			if (/^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9]{1}$/.test(value)) {
				return true;
			}
			return false;
		},
		errorMessage: 'You have to input GST no with correct formate',
		errorMessageKey: 'badGst'
	});

	//for Port validation
	$.formUtils.addValidator({
		name: 'port',
		validatorFunction: function (value, $el, config, language, $form) {
			if (/^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$/.test(value)) {
				return true;
			}
			return false;
		},
		errorMessage: 'You have to input port betweeen 0 to 65535',
		errorMessageKey: 'badPort'
	});
	//for Pin Code validation
	$.formUtils.addValidator({
		name: 'pincode',
		validatorFunction: function (value, $el, config, language, $form) {
			if (/^[0-9]{6}$/.test(value)) {
				return true;
			}
			return false;
		},
		errorMessage: 'You have to input 6 digit pincode',
		errorMessageKey: 'badPinCode'
	});

	//for alphabet validation
	$.formUtils.addValidator({
		name: 'alphabet',
		validatorFunction: function (value, $el, config, language, $form) {
			if (/^([A-Za-z]+)$/.test(value)) {
				return true;
			}
			return false;
		},
		errorMessage: 'You have to input with a to z or A to Z',
		errorMessageKey: 'badAlphabet'
	});

	//for username validation
	$.formUtils.addValidator({
		name: 'username',
		validatorFunction: function (value, $el, config, language, $form) {
			if (/^([A-Za-z0-9._]+)$/.test(value)) {
				return true;
			}
			return false;
		},
		errorMessage: 'You have to input username with a-z A-Z 0-9 and . _',
		errorMessageKey: 'badUsername'
	});

	$.validate({
		inputParentClassOnError: 'has-warning',
		inputParentClassOnSuccess: 'has-info',
	});
});
$(function () {
	$("[data-mask]").inputmask();
});
$.fn.modal.Constructor.prototype.enforceFocus = function () {};